class Solution {
	bool flag;
public:
	int binarySearch(int st, int end, int* a, int key) {
		flag = false;
		int lo = st, hi = end;
		while (lo < hi) {
			int mi = (lo + hi) >> 1;
			(key > a[mi]) ? lo = mi + 1 : hi = mi;
		}
		if (a[lo] == key)
		    flag = true;
		return --lo;		
	}
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
		int m = matrix.size(), n = matrix[0].size();
        int *col = new int[m], *row = new int[n];
		for (int i = 0; i < m; i++)
			col[i] = matrix[i][0];
		
		int res = binarySearch(0, m, col, target);
		if (flag == true)
			return true;
		if (res == -1)
			return false;
		
		for (int i = 0; i < n; i++) 
			row[i] = matrix[res][i];
		
		res = binarySearch(0, n, row, target);
		return flag;
    }
};